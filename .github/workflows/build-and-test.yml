name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    permissions:
      contents: read
      packages: read
      actions: read

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'
        cache-dependency-path: './src/frontend/package-lock.json'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Install frontend dependencies
      run: |
        cd src/frontend
        npm ci

    - name: Install backend dependencies
      run: |
        cd src/backend
        npm ci

    - name: Build frontend
      run: |
        cd src/frontend
        npm run build

    - name: Build Tauri app
      run: |
        cd src/backend
        npm run tauri:build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY || '' }}
        TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD || '' }}

    - name: Debug - Check if build directory exists
      run: |
        echo "Checking if build directory exists..."
        if (Test-Path -Path "src\backend\src-tauri\target\release\bundle") {
            echo "Build directory exists"
        } else {
            echo "Build directory does not exist"
            echo "Checking parent directories..."
            if (Test-Path -Path "src\backend\src-tauri\target\release") {
                echo "Release directory exists"
                dir src\backend\src-tauri\target\release
            } else {
                echo "Release directory does not exist"
                if (Test-Path -Path "src\backend\src-tauri\target") {
                    echo "Target directory exists"
                    dir src\backend\src-tauri\target
                } else {
                    echo "Target directory does not exist"
                }
            }
        }

    - name: Debug - List build directory structure
      if: always()
      run: |
        echo "Listing build directory structure..."
        if (Test-Path -Path "src\backend\src-tauri\target\release\bundle") {
            dir src\backend\src-tauri\target\release\bundle /s
        } else {
            echo "Build directory does not exist, cannot list structure"
        }

    - name: Debug - Check MSI files
      run: |
        echo "Checking for MSI files..."
        dir src\backend\src-tauri\target\release\bundle\msi /b
        echo "Checking for NSIS files..."
        dir src\backend\src-tauri\target\release\bundle\nsis /b

    - name: Debug - Show environment variables
      run: |
        echo "GITHUB_WORKSPACE: $env:GITHUB_WORKSPACE"
        echo "Current directory: $pwd"

    - name: Upload build artifacts
      if: success() && github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: FixMyTex-win-x64
        path: './src/backend/src-tauri/target/release/bundle/msi/*.msi'
        retention-days: 7

  codeql:
    name: CodeQL Analysis
    runs-on: windows-latest
    permissions:
      security-events: write

    steps:
    - uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'javascript, typescript'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'
        cache-dependency-path: './src/frontend/package-lock.json'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Install frontend dependencies
      run: |
        cd src/frontend
        npm ci

    - name: Install backend dependencies
      run: |
        cd src/backend
        npm ci

    - name: Build frontend
      run: |
        cd src/frontend
        npm run build

    - name: Build Tauri app
      run: |
        cd src/backend
        npm run tauri:build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
