name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write # This gives permission to create releases and upload assets

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Extract version from tag
      id: get_version
      shell: bash
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'
        cache-dependency-path: './src/frontend/package-lock.json'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Install frontend dependencies
      run: |
        cd src/frontend
        npm ci

    - name: Install backend dependencies
      run: |
        cd src/backend
        npm ci

    - name: Build frontend
      run: |
        cd src/frontend
        npm run build

    - name: Build and release Tauri app
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY || '' }}
        TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD || '' }}
      with:
        projectPath: './src/backend/src-tauri'
        tauriScript: 'cargo'
        args: '--release'

    - name: Debug - List build directory structure
      if: always()
      run: |
        echo "Listing build directory structure..."
        dir src\backend\src-tauri\target\release\bundle /s

    - name: Debug - Check MSI files
      if: always()
      run: |
        echo "Checking for MSI files..."
        dir src\backend\src-tauri\target\release\bundle\msi /b
        echo "Checking for NSIS files..."
        dir src\backend\src-tauri\target\release\bundle\nsis /b

    - name: Debug - Show environment variables
      if: always()
      run: |
        echo "GITHUB_WORKSPACE: $env:GITHUB_WORKSPACE"
        echo "Current directory: $pwd"
        tagName: v${{ steps.get_version.outputs.VERSION }}
        releaseName: FixMyTex v${{ steps.get_version.outputs.VERSION }}
        releaseBody: |
          ## FixMyTex Release v${{ steps.get_version.outputs.VERSION }}

          ## INFRASTRUCTURE UPDATE
          - Switched from .NET WPF to Rust (Tauri + Angular + Material)

          ### Key Features
          - Text enhancement via Ctrl+G hotkey in any application          
          - Support for OpenAI and Claude AI providers

          ### Technical Requirements
          - Windows operating system
          - API key for OpenAI or Claude

          ### Installation
          1. Download the installer
          2. Run the installer and follow the instructions
          3. Configure API keys in the settings
        releaseCommitish: ${{ github.sha }}
        releaseDraft: true
        prerelease: false

    - name: Debug - List build directory structure
      if: always()
      run: |
        echo "Listing build directory structure..."
        dir src\backend\src-tauri\target\release\bundle /s

    - name: Debug - Check MSI files
      if: always()
      run: |
        echo "Checking for MSI files..."
        dir src\backend\src-tauri\target\release\bundle\msi /b
        echo "Checking for NSIS files..."
        dir src\backend\src-tauri\target\release\bundle\nsis /b

    - name: Debug - Show environment variables
      if: always()
      run: |
        echo "GITHUB_WORKSPACE: $env:GITHUB_WORKSPACE"
        echo "Current directory: $pwd"
