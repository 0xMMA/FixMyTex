name: Create Release

on:
  push:
    tags:
      - 'v*'

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write # This gives permission to create releases and upload assets

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Extract version from tag
      id: get_version
      shell: bash
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'not-set' }}

    - name: Publish Windows application
      run: |
        dotnet publish FixMyTex/FixMyTex.csproj -c Release -r win-x64 --self-contained -p:PublishSingleFile=true -o ./publish/win-x64
        dir ./publish/win-x64
      
    - name: Create ZIP archive
      run: |
        $fileName = "FixMyTex-${{ steps.get_version.outputs.VERSION }}-win-x64.zip"
        Write-Host "Creating ZIP file: $fileName"
        Compress-Archive -Path ./publish/win-x64/* -DestinationPath ./$fileName -Force
        dir *.zip
      shell: pwsh
      
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: FixMyTex v${{ steps.get_version.outputs.VERSION }}
        draft: true
        generate_release_notes: true
        body: |
          ## FixMyTex Release v${{ steps.get_version.outputs.VERSION }}
          
          ### Key Features
          - Text enhancement via Ctrl+G hotkey in any application
          - Smart format detection (HTML/Markdown) based on source application
          - Support for OpenAI and Claude AI providers
          
          ### Technical Requirements
          - Windows operating system
          - .NET 9.0 runtime
          - API key for OpenAI or Claude
          
          ### Installation
          1. Download the ZIP file
          2. Extract contents to desired location
          3. Run FixMyTex.exe
          4. Configure API keys as environment variables
        files: ./*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}